name: Go

on:
  push:
    branches:
      - main
    paths:
      - 'go.mod'
      - 'go.sum'
      - 'main.go'
      - 'cmd/**'
      - 'internal/**'
      - 'pkg/**'
      - 'test/**'
      - '**/*.go'
      - 'assets/**'
    
  pull_request:
    branches:
      - main
    paths:
      - 'go.mod'
      - 'go.sum'
      - 'main.go'
      - 'cmd/**'
      - 'internal/**'
      - 'pkg/**'
      - 'test/**'
      - '**/*.go'
      - 'assets/**'
      
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  # Check if there is any dirty change for go mod tidy
  go-mod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - name: Check go mod
        run: |
          go mod tidy
          git diff --exit-code go.mod
          git diff --exit-code go.sum

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - name: Build
        run: make build

  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - name: Format
        run: |
          make fmt
          if [[ -n $(git status --porcelain) ]]; then
            echo "Code is not formatted. Please run 'make fmt'"
            git diff
            exit 1
          fi

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - name: lint
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: latest

  tests-on-windows:
    needs: golangci-lint # run after golangci-lint action to not produce duplicated errors
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - name: Run Tests on Windows
        run: make.exe test

  # tests-on-macos:
  #   needs: golangci-lint # run after golangci-lint action to not produce duplicated errors
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/setup-go@v6
  #       with:
  #         go-version-file: go.mod
  #     - name: Run Tests on macOS
  #       run: make test

  tests-on-linux:
    needs: golangci-lint # run after golangci-lint action to not produce duplicated errors
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-24.04-arm
        golang:
          - '1.24'
          - '1.25'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
      - name: Run Tests on Linux
        run: make test